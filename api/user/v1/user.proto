syntax = "proto3";

package user.v1;
import "validate/validate.proto";
import "api/user/v1/user_data.proto";


option go_package = "./userPb";

// The greeting service definition.
service Users {
  rpc Register(RegisterRequest) returns (UserReply);
  rpc Login(LoginRequest) returns (UserReply);
  rpc GetProfileByUserName(GetProfileByUserNameRequest) returns (GetProfileReply);
  rpc GetProfileById(GetProfileByIdRequest) returns (GetProfileReply);
  rpc GetUser(GetUserRequest) returns (UserReply);
  rpc UpdateUser(UpdateUserRequest) returns (UserReply);

  rpc FollowUser(FollowUserRequest) returns (GetProfileReply);
  rpc UnfollowUser(UnfollowUserRequest) returns (GetProfileReply);
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message UserReply {
  User user = 1;
}

message RegisterRequest {
  RegisterModel user = 1;
}

message GetProfileByUserNameRequest {
  string username = 1 [(validate.rules).string.min_len = 1];
}

message GetProfileByIdRequest {
  int32 id = 1 [(validate.rules).int32 = {gt: 0}];
}

message GetProfileReply {
  Profile profile = 1;
}

message GetUserRequest {
  //    string  type = 1;
  string  type = 1 [(validate.rules).string = {in: ["username", "id"]}];
  string  keyword = 2;
}


message UpdateUserRequest {
  string email = 1 [(validate.rules).string = {ignore_empty: true, email: true}];
  string username = 2 [(validate.rules).string = {ignore_empty: true, min_len: 3}];
  string password = 3 [(validate.rules).string = {ignore_empty: true, min_len: 6}];
  string image = 4;
  string bio = 5;
  int64 user_id = 6 [(validate.rules).int64 = {gt: 0}] ;
}

message FollowUserRequest {
  string username = 1[(validate.rules).string = {min_len: 3}];
}

message UnfollowUserRequest {
  string username = 1[(validate.rules).string = {min_len: 3}];
}