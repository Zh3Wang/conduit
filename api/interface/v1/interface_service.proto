syntax = "proto3";

package interface.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "api/interface/v1/interface_data.proto";

option go_package = "./interfacePb";

// The greeting service definition.
service ConduitInterface {
  rpc Register (RegisterRequest) returns (UserReply) {
    option (google.api.http) = {
      post: "api/users",
      body: "*",
    };
  };
  rpc Login (LoginRequest) returns (UserReply) {
    option (google.api.http) = {
      post:"api/users/login",
      body: "*",
    };
  }
  rpc GetArticle (GetArticleRequest) returns (GetArticleReply)  {
    option (google.api.http) = {
      get: "api/articles/{slug}",
    };
  }
  rpc GetCurrentUser (GetCurrentUserRequest) returns (UserReply) {
    option (google.api.http) = {
      get:"api/user",
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UserReply) {
    option (google.api.http) = {
      put: "api/user",
      body: "*",
    };
  }

}

message GetArticleRequest {
  string slug = 1 [(validate.rules).string.min_len = 1,json_name = "slug"];
}

// The response message containing the greetings
message GetArticleReply {
  SingleArticle article = 3;
}

message RegisterUserModel {
  string username = 1 [(validate.rules).string.min_len = 3, json_name = "username"];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3 [(validate.rules).string.min_len = 6];
}

message RegisterRequest {
  RegisterUserModel user = 1;
}

message UserReply {
  User user = 1;
}

message LoginRequest {
  message param {
    string email = 1 [(validate.rules).string.email = true, json_name = "email"];
    string password = 2 [(validate.rules).string.min_len = 6];
  }
  param user = 1;
}

message GetCurrentUserRequest {}


message UpdateUserRequest {
  message User {
    string email = 1;
    string password = 2;
    string username = 3;
    string bio = 4;
    string image = 5;
  }
  User user = 1;
}